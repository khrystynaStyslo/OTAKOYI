{"version":3,"sources":["store/actionTypes.js","store/reducer.js","store/index.js","components/ExchangeRatePage/ExchangeRatePage.js","api/data.js","store/actionCreators.js","components/ExchangeRatePage/index.js","components/ConvertPage/index.js","components/ConvertPage/ConvertPage.js","components/App/App.js","components/App/index.js","index.js"],"names":["ACTION_TYPES","LOAD_DATA_REQUEST","LOAD_DATA_FAILURE","LOAD_DATA_SUCCESS","LOAD_ARCHIVE_DATA_SUCCESS","LOAD_ARCHIVE_DATA_REQUEST","LOAD_ARCHIVE_DATA_FAILURE","CONVERT_MONEY","GET_INPUT_VALUE","GET_INPUT_DATE","CLEAR_INPUT_VALUE","GET_FIRST_SELECTED_VALUE","GET_SECOND_SELECTED_VALUE","SWAP_CURRENCY","convertValue","first","second","value","findCurrency","array","ccy","find","item","initialState","baseExchangeRate","exchangeRate","isLoading","isLoadingArchive","isLoadedArchive","isLoaded","hasError","inputValue","date","Date","firstSelect","secondSelect","allSelected","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","state","arguments","length","undefined","action","type","_objectSpread","data","concat","Object","toConsumableArray","base_ccy","sale","buy","target","replace","Number","saleRateNB","purchaseRateNB","tempCurrency","tempValue","applyMiddleware","thunk","getData","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","url","response","wrap","_context","prev","next","fetch","sent","abrupt","json","stop","_x","apply","this","loadArchiveDataRequest","getDataFromApi","dispatch","setTimeout","then","loadDataSuccess","catch","getArchiveDataFromApi","encodeURIComponent","loadArchiveDataSuccess","Enhanced","connect","getInputDate","react_default","createElement","Fragment","className","scope","map","key","react_datepicker_min_default","dateFormat","selected","onChange","onSelect","dd","getDate","mm","getMonth","getFullYear","minDate","maxDate","showYearDropdown","dateFormatCalendar","yearDropdownItemNumber","scrollableYearDropdown","role","currency","getInputValue","event","convertMoney","getFirstSelectValue","_ref2","getSecondSelectValue","_ref3","clearInput","swapCurrency","disabled","onClick","placeholder","elem","App","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","props","loadDataRequest","_this$props","react_router_dom","to","react_router","path","exact","component","ExchangeRatePage","ConvertPage","React","Component","ReactDOM","render","es","App_Enhanced","document","getElementById"],"mappings":"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","file":"static/js/main.4f9d08cb.chunk.js","sourcesContent":["export const ACTION_TYPES = {\r\n  LOAD_DATA_REQUEST: 'LOAD_DATA_REQUEST',\r\n  LOAD_DATA_FAILURE: 'LOAD_DATA_FAILURE',\r\n  LOAD_DATA_SUCCESS: 'LOAD_DATA_SUCCESS',\r\n  LOAD_ARCHIVE_DATA_SUCCESS: 'LOAD_ARCHIVE_DATA_SUCCESS',\r\n  LOAD_ARCHIVE_DATA_REQUEST: 'LOAD_ARCHIVE_DATA_REQUEST',\r\n  LOAD_ARCHIVE_DATA_FAILURE: 'LOAD_ARCHIVE_DATA_FAILURE',\r\n  CONVERT_MONEY: 'CONVERT_MONEY',\r\n  GET_INPUT_VALUE: 'GET_INPUT_VALUE',\r\n  GET_INPUT_DATE: 'GET_INPUT_DATE',\r\n  CLEAR_INPUT_VALUE: 'CLEAR_INPUT_VALUE',\r\n  GET_FIRST_SELECTED_VALUE: 'GET_FIRST_SELECTED_VALUE',\r\n  GET_SECOND_SELECTED_VALUE: 'GET_SECOND_SELECTED_VALUE',\r\n  SWAP_CURRENCY: 'SWAP_CURRENCY',\r\n};\r\n","import { ACTION_TYPES } from './actionTypes';\r\n\r\nfunction convertValue(first, second, value) {\r\n  return (first * value / second);\r\n}\r\n\r\nfunction findCurrency(array, ccy, value) {\r\n  return array.find(item => item[ccy] === value)\r\n}\r\n\r\nconst initialState = {\r\n  baseExchangeRate: [],\r\n  exchangeRate: [],\r\n  isLoading: false,\r\n  isLoadingArchive: false,\r\n  isLoadedArchive: false,\r\n  isLoaded: false,\r\n  hasError: false,\r\n  inputValue: '',\r\n  convertValue: null,\r\n  date: new Date(),\r\n  firstSelect: null,\r\n  secondSelect: null,\r\n  allSelected: false,\r\n};\r\n\r\nexport function reducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case ACTION_TYPES.LOAD_DATA_REQUEST: {\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      }\r\n    }\r\n    case ACTION_TYPES.LOAD_DATA_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        baseExchangeRate: action.data,\r\n        exchangeRate: [...action.data, {\r\n          \"ccy\":\"UAH\",\r\n          \"base_ccy\":\"UAH\",\r\n          \"sale\":1.0000000,\r\n          \"buy\":1.0000000\r\n        }]\r\n      }\r\n    }\r\n    case ACTION_TYPES.LOAD_ARCHIVE_DATA_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isLoadingArchive: false,\r\n        isLoadedArchive: true,\r\n        exchangeRate: action.data.exchangeRate,\r\n        firstSelect: null,\r\n        secondSelect: null,\r\n      }\r\n    }\r\n    case ACTION_TYPES.LOAD_ARCHIVE_DATA_REQUEST: {\r\n      return {\r\n        ...state,\r\n        isLoadingArchive: true,\r\n      }\r\n    }\r\n    case ACTION_TYPES.LOAD_ARCHIVE_DATA_FAILURE: {\r\n      return {\r\n        ...state,\r\n        isLoadingArchive: false,\r\n        hasError: true,\r\n      }\r\n    }\r\n    case ACTION_TYPES.LOAD_DATA_FAILURE: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        hasError: true,\r\n      }\r\n    }\r\n    case ACTION_TYPES.GET_INPUT_VALUE: {\r\n      return {\r\n        ...state,\r\n        inputValue: action.target.value.replace(/[^0-9|.]/gi, ''),\r\n      }\r\n    }\r\n    case ACTION_TYPES.CLEAR_INPUT_VALUE: {\r\n      return {\r\n        ...state,\r\n        inputValue: \"\",\r\n      }\r\n    }\r\n    case ACTION_TYPES.CONVERT_MONEY: {\r\n      return {\r\n        ...state,\r\n        convertValue: state.baseExchangeRate.length+1 === state.exchangeRate.length\r\n          ? convertValue(\r\n            findCurrency(state.exchangeRate, 'ccy', state.firstSelect).sale,\r\n            findCurrency(state.exchangeRate, 'ccy', state.secondSelect).buy,\r\n            Number(state.inputValue),\r\n          )\r\n          : convertValue(\r\n            Number(findCurrency(state.exchangeRate, 'currency', state.firstSelect).saleRateNB),\r\n            Number(findCurrency(state.exchangeRate, 'currency', state.secondSelect).purchaseRateNB),\r\n            Number(state.inputValue),\r\n          )\r\n      }\r\n    }\r\n    case ACTION_TYPES.GET_INPUT_DATE: {\r\n      return {\r\n        ...state,\r\n        date: action.date,\r\n      }\r\n    }\r\n    case ACTION_TYPES.GET_FIRST_SELECTED_VALUE: {\r\n      return {\r\n        ...state,\r\n        firstSelect: action.value,\r\n        allSelected: !!state.secondSelect,\r\n      }\r\n    }\r\n    case ACTION_TYPES.GET_SECOND_SELECTED_VALUE: {\r\n      return {\r\n        ...state,\r\n        secondSelect: action.value,\r\n        allSelected: !!state.firstSelect,\r\n      }\r\n    }\r\n    case ACTION_TYPES.SWAP_CURRENCY: {\r\n      let tempCurrency = state.firstSelect;\r\n      let tempValue = state.inputValue;\r\n      return {\r\n        ...state,\r\n        firstSelect: state.secondSelect,\r\n        secondSelect: tempCurrency,\r\n        inputValue: state.convertValue,\r\n        convertValue: tempValue,\r\n      }\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { reducer } from \"./reducer\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(reducer,\r\n  composeEnhancers(\r\n    applyMiddleware(thunk)\r\n  )\r\n);\r\n","import React from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"./ExchangeRatePage.scss\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nfunction getDate(date) {\r\n  let dd = date.getDate();\r\n  let mm = date.getMonth() + 1;\r\n  const yyyy = date.getFullYear();\r\n\r\n  if (dd < 10) {\r\n    dd = \"0\" + dd;\r\n  }\r\n  if (mm < 10) {\r\n    mm = \"0\" + mm;\r\n  }\r\n  return dd + \".\" + mm + \".\" + yyyy;\r\n}\r\n\r\nexport const ExchangeRatePage = ({\r\n  baseExchangeRate,\r\n  date,\r\n  getInputDate,\r\n  exchangeRate,\r\n  getArchiveDataFromApi,\r\n  isLoaded,\r\n  isLoadedArchive,\r\n  isLoadingArchive,\r\n  hasError\r\n}) => {\r\n  return (\r\n    <>\r\n      {baseExchangeRate.length !== 0 && (\r\n        <div className=\"exchange_page\">\r\n          <table className=\"table table-danger\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">Currency code</th>\r\n                <th scope=\"col\">Buying rate</th>\r\n                <th scope=\"col\">Sales rate</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {baseExchangeRate !== 0 &&\r\n                baseExchangeRate.map(item => (\r\n                  <tr key={item.ccy}>\r\n                    <th scope=\"row\">{item.ccy}</th>\r\n                    <td>{item.buy}</td>\r\n                    <td>{item.sale}</td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </table>\r\n          <div className=\"archive_rate\">\r\n            <h4>Select the date you want</h4>\r\n            <DatePicker\r\n              dateFormat=\"dd.MM.yyyy\"\r\n              selected={date}\r\n              onChange={date => getInputDate(date)}\r\n              onSelect={date => getArchiveDataFromApi(getDate(date))}\r\n              minDate={new Date(\"2015/01/01\")}\r\n              maxDate={new Date()}\r\n              showYearDropdown\r\n              dateFormatCalendar=\"MMMM\"\r\n              yearDropdownItemNumber={5}\r\n              scrollableYearDropdown\r\n            />\r\n            {isLoadingArchive && (\r\n              <div className=\"spinner-border text-danger spinner-archive\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </div>\r\n            )}\r\n            {isLoadedArchive && (\r\n              <div>\r\n                <table className=\"table table-danger archive_table\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th scope=\"col\">Currency code</th>\r\n                      <th scope=\"col\">Buying rate</th>\r\n                      <th scope=\"col\">Sales rate</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {exchangeRate.map(\r\n                      item =>\r\n                        item.currency && (\r\n                          <tr key={item.currency}>\r\n                            <th scope=\"row\">{item.currency}</th>\r\n                            <td>{item.purchaseRateNB}</td>\r\n                            <td>{item.saleRateNB}</td>\r\n                          </tr>\r\n                        )\r\n                    )}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            )}\r\n            {hasError && <h3>Something went wrong:(</h3>}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","export const getData = async (url) => {\r\n  const response = await fetch(url);\r\n\r\n  return response.json();\r\n};\r\n","import { getData } from \"../api/data\";\r\nimport { ACTION_TYPES } from \"./actionTypes\";\r\n\r\nconst EXCHANGE_RATE_URL = \"https://api.privatbank.ua/p24api/pubinfo?json&exchange&coursid=5\";\r\n\r\nexport const loadDataRequest = () => ({\r\n  type: ACTION_TYPES.LOAD_DATA_REQUEST,\r\n});\r\n\r\nexport const loadDataSuccess = (data) => ({\r\n  type: ACTION_TYPES.LOAD_DATA_SUCCESS,\r\n  data,\r\n});\r\n\r\nexport const loadArchiveDataSuccess = (data) => ({\r\n  type: ACTION_TYPES.LOAD_ARCHIVE_DATA_SUCCESS,\r\n  data,\r\n});\r\n\r\nexport const loadDataFailure = () => ({\r\n  type: ACTION_TYPES.LOAD_DATA_FAILURE,\r\n});\r\n\r\nexport const loadArchiveDataRequest = () => ({\r\n  type: ACTION_TYPES.LOAD_ARCHIVE_DATA_REQUEST,\r\n});\r\n\r\nexport const loadArchiveDataFailure = () => ({\r\n  type: ACTION_TYPES.LOAD_ARCHIVE_DATA_FAILURE,\r\n});\r\n\r\nexport const convertMoney = () => ({\r\n  type: ACTION_TYPES.CONVERT_MONEY,\r\n});\r\n\r\nexport const getInputValue = ({target}) => ({\r\n  type: ACTION_TYPES.GET_INPUT_VALUE,\r\n  target,\r\n});\r\n\r\nexport const getInputDate = (date) => ({\r\n  type: ACTION_TYPES.GET_INPUT_DATE,\r\n  date,\r\n});\r\n\r\nexport const getFirstSelectValue = ({target}) => ({\r\n  type: ACTION_TYPES.GET_FIRST_SELECTED_VALUE,\r\n  value: target.value,\r\n});\r\n\r\nexport const getSecondSelectValue = ({target}) => ({\r\n  type: ACTION_TYPES.GET_SECOND_SELECTED_VALUE,\r\n  value: target.value,\r\n});\r\n\r\nexport const clearInput = () => ({\r\n  type: ACTION_TYPES.CLEAR_INPUT_VALUE,\r\n});\r\n\r\nexport const swapCurrency = () => ({\r\n  type: ACTION_TYPES.SWAP_CURRENCY,\r\n});\r\n\r\nexport const getDataFromApi = () => (dispatch) => {\r\n  setTimeout(() => {\r\n    getData(EXCHANGE_RATE_URL)\r\n      .then(data => {\r\n        dispatch(loadDataSuccess(data));\r\n      })\r\n      .catch(() => {\r\n        dispatch(loadDataFailure());\r\n      });\r\n  }, 700)\r\n};\r\n\r\nexport const getArchiveDataFromApi = (date) => (dispatch) => {\r\n  dispatch(loadArchiveDataRequest());\r\n  setTimeout(() => {\r\n    getData(`/api/archiveData?date=${encodeURIComponent(date)}`)\r\n      .then(data => {\r\n        dispatch(loadArchiveDataSuccess(data));\r\n      })\r\n      .catch(() => {\r\n        dispatch(loadArchiveDataFailure());\r\n      });\r\n    dispatch(loadArchiveDataRequest());\r\n  }, 500)\r\n};\r\n","import { connect } from 'react-redux';\r\nimport { ExchangeRatePage } from './ExchangeRatePage';\r\nimport { getInputDate, getArchiveDataFromApi } from '../../store/actionCreators';\r\n\r\nconst mapDispatch2Props = dispatch => ({\r\n  getArchiveDataFromApi: (value) => dispatch(getArchiveDataFromApi(value)),\r\n  getInputDate: (value) => dispatch(getInputDate(value)),\r\n});\r\n\r\nfunction mapState2Props(state) {\r\n  return {\r\n    baseExchangeRate: state.baseExchangeRate,\r\n    exchangeRate: state.exchangeRate,\r\n    date: state.date,\r\n    isLoading: state.isLoading,\r\n    isLoaded: state.isLoaded,\r\n    isLoadingArchive: state.isLoadingArchive,\r\n    isLoadedArchive: state.isLoadedArchive,\r\n    hasError: state.hasError,\r\n  };\r\n}\r\n\r\nconst Enhanced = connect(\r\n  mapState2Props,\r\n  mapDispatch2Props,\r\n)(ExchangeRatePage);\r\n\r\nexport {\r\n  Enhanced as ExchangeRatePage,\r\n};\r\n","import { connect } from 'react-redux';\r\nimport { ConvertPage } from './ConvertPage';\r\nimport { getInputValue, convertMoney, getFirstSelectValue, getSecondSelectValue, clearInput, swapCurrency } from '../../store/actionCreators';\r\n\r\nconst mapDispatch2Props = dispatch => ({\r\n  getInputValue: (event) => dispatch(getInputValue(event)),\r\n  convertMoney: () => dispatch(convertMoney()),\r\n  getFirstSelectValue: (event) => dispatch(getFirstSelectValue(event)),\r\n  getSecondSelectValue: (event) => dispatch(getSecondSelectValue(event)),\r\n  clearInput: () => dispatch(clearInput()),\r\n  swapCurrency: () => dispatch(swapCurrency()),\r\n});\r\n\r\nfunction mapState2Props(state) {\r\n  return {\r\n    exchangeRate: state.exchangeRate,\r\n    baseExchangeRate: state.baseExchangeRate,\r\n    convertValue: state.convertValue,\r\n    inputValue: state.inputValue,\r\n    firstSelect: state.firstSelect,\r\n    secondSelect: state.secondSelect,\r\n    allSelected: state.allSelected,\r\n  };\r\n}\r\n\r\nconst Enhanced = connect(\r\n  mapState2Props,\r\n  mapDispatch2Props,\r\n)(ConvertPage);\r\n\r\nexport {\r\n  Enhanced as ConvertPage,\r\n};\r\n","import React from \"react\";\r\nimport './ConvertPage.scss';\r\n\r\nexport const ConvertPage = ({\r\n  getInputValue,\r\n  clearInput,\r\n  inputValue,\r\n  convertValue,\r\n  convertMoney,\r\n  exchangeRate,\r\n  baseExchangeRate,\r\n  firstSelect,\r\n  secondSelect,\r\n  getFirstSelectValue,\r\n  getSecondSelectValue,\r\n  swapCurrency,\r\n  allSelected\r\n}) => {\r\n  return (\r\n    <>\r\n      {baseExchangeRate.length !== 0 && (\r\n        <div className=\"convert_page\">\r\n          <select\r\n            onChange={event => getFirstSelectValue(event)}\r\n            value={firstSelect}\r\n            className=\"select\"\r\n          >\r\n            <option disabled selected>\r\n              Choose currency\r\n            </option>\r\n            {baseExchangeRate.length+1 === exchangeRate.length &&\r\n            exchangeRate.map(item => (\r\n              <option value={item.ccy} key={item.ccy}>\r\n                {item.ccy}\r\n              </option>\r\n            ))}\r\n            {baseExchangeRate !== exchangeRate && exchangeRate.map(\r\n              item =>\r\n                item.currency && (\r\n                  <option value={item.currency} key={item.currency}>\r\n                    {item.currency}\r\n                  </option>\r\n                )\r\n            )}\r\n          </select>\r\n          <i className=\"fas fa-arrows-alt-h\" onClick={swapCurrency}/>\r\n          <select\r\n            className=\"select\"\r\n            onChange={event => getSecondSelectValue(event)}\r\n            value={secondSelect}\r\n          >\r\n            <option disabled selected>\r\n              Choose currency\r\n            </option>\r\n            {baseExchangeRate.length+1 === exchangeRate.length &&\r\n            exchangeRate.map(item => (\r\n              <option value={item.ccy} key={item.ccy}>\r\n                {item.ccy}\r\n              </option>\r\n            ))}\r\n            {baseExchangeRate !== exchangeRate && exchangeRate.map(\r\n              item =>\r\n                item.currency && (\r\n                  <option value={item.currency} key={item.currency}>\r\n                    {item.currency}\r\n                  </option>\r\n                )\r\n            )}\r\n          </select>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Input your value\"\r\n            onChange={getInputValue}\r\n            onClick={clearInput}\r\n            value={inputValue}\r\n            className=\"input_value\"\r\n          /> <br/>\r\n          <input\r\n            type=\"text\"\r\n            disabled\r\n            placeholder=\"Converted value\"\r\n            value={convertValue || \"\"}\r\n            className=\"input_value\"\r\n          /> <br/>\r\n          <button onClick={convertMoney} disabled={!allSelected} className=\"badge badge-danger btn_convert\">Convert</button>\r\n          {firstSelect && secondSelect && (\r\n            <>\r\n              {baseExchangeRate.length+1 === exchangeRate.length && (\r\n                <>\r\n                  <h4>{firstSelect}:{exchangeRate.find(elem => elem.ccy === firstSelect).sale}</h4>\r\n                  <h4>{secondSelect}:{exchangeRate.find(elem => elem.ccy === secondSelect).buy}</h4>\r\n                </>\r\n              )}\r\n              {exchangeRate.length > 5 && (\r\n                <>\r\n                  <h3>Archive exchange rate</h3>\r\n                  <h4>{firstSelect}:{exchangeRate.find(elem => elem.currency === firstSelect).saleRateNB}</h4>\r\n                  <h4>{secondSelect}:{exchangeRate.find(elem => elem.currency === secondSelect).purchaseRateNB}</h4>\r\n                </>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Switch, Route, NavLink } from 'react-router-dom';\r\nimport { ExchangeRatePage } from '../ExchangeRatePage';\r\nimport { ConvertPage } from '../ConvertPage';\r\nimport \"./App.scss\";\r\n\r\nexport class App extends React.Component {\r\n  componentDidMount() {\r\n    this.props.getDataFromApi();\r\n    this.props.loadDataRequest();\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, baseExchangeRate } = this.props;\r\n    return (\r\n      <div className=\"main\">\r\n        {isLoading && baseExchangeRate.length === 0 && (\r\n          <div className=\"spinner spinner-border text-danger\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </div>\r\n        )}\r\n        {baseExchangeRate.length !== 0 && (\r\n          <nav>\r\n          <ul className=\"nav justify-content-center\">\r\n            <li className=\"nav-item\">\r\n              <NavLink to=\"/\" className=\"badge badge-light\">\r\n                Exchange rate\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/convertMoney\" className=\"badge badge-light\">\r\n                Convert money\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        )}\r\n          <Switch>\r\n            <Route path=\"/\" exact component={ExchangeRatePage} />\r\n            <Route path=\"/convertMoney\" component={ConvertPage}/>}\r\n            />\r\n          </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { connect } from 'react-redux';\r\nimport { App } from './App';\r\nimport { getDataFromApi, loadDataRequest } from '../../store/actionCreators';\r\n\r\nconst mapDispatch2Props = dispatch => ({\r\n  getDataFromApi: () => dispatch(getDataFromApi()),\r\n  loadDataRequest: () => dispatch(loadDataRequest()),\r\n});\r\n\r\nfunction mapState2Props(state) {\r\n  return {\r\n    baseExchangeRate: state.baseExchangeRate,\r\n    isLoading: state.isLoading,\r\n  };\r\n}\r\n\r\nconst Enhanced = connect(\r\n  mapState2Props,\r\n  mapDispatch2Props,\r\n)(App);\r\n\r\nexport {\r\n  Enhanced as App,\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store';\r\nimport { App } from './components/App';\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n  <HashRouter>\r\n    <App />\r\n  </HashRouter>\r\n  </Provider>,\r\ndocument.getElementById('root')\r\n);\r\n"],"sourceRoot":""}