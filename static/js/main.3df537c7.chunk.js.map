{"version":3,"sources":["api/data.js","store/index.js","components/ExchangeRatePage/index.js","components/ExchangeRatePage/ExchangeRatePage.js","components/ConvertPage/index.js","components/ConvertPage/ConvertPage.js","components/App/App.js","components/App/index.js","index.js"],"names":["getData","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","url","response","wrap","_context","prev","next","fetch","sent","abrupt","json","stop","_x","apply","this","arguments","ACTION_TYPES","LOAD_DATA_REQUEST","LOAD_DATA_FAILURE","LOAD_DATA_SUCCESS","LOAD_ARCHIVE_DATA_SUCCESS","CONVERT_MONEY","GET_INPUT_VALUE","GET_INPUT_DATE","getDataFromApi","dispatch","then","data","type","loadDataSuccess","getArchiveDataFromApi","date","concat","console","log","loadArchiveDataSuccess","initialState","baseExchangeRate","exchangeRate","isLoading","isLoaded","hasError","inputValue","convertValue","Date","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","state","length","undefined","action","_objectSpread","target","value","Number","find","item","currency","purchaseRateNB","applyMiddleware","thunk","Enhanced","connect","getInputDate","react_default","createElement","Fragment","className","scope","map","key","ccy","buy","sale","react_datepicker_min_default","dateFormat","selected","onChange","onSelect","dd","getDate","mm","getMonth","getFullYear","minDate","maxDate","showYearDropdown","dateFormatCalendar","yearDropdownItemNumber","scrollableYearDropdown","saleRateNB","getInputValue","event","convertMoney","placeholder","disabled","onClick","App","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","props","react_router_dom","to","react_router","path","exact","component","ExchangeRatePage","ConvertPage","React","Component","ReactDOM","render","es","App_Enhanced","document","getElementById"],"mappings":"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","file":"static/js/main.3df537c7.chunk.js","sourcesContent":["export const getData = async(url) => {\r\n  const response = await fetch(url);\r\n\r\n  return response.json();\r\n};\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { getData } from '../api/data';\r\n\r\nconst EXCHANGE_RATE_URL = \"https://api.privatbank.ua/p24api/pubinfo?json&exchange&coursid=5\";\r\nconst BASE_EXCHANGE_RATES_ARCHIVE_URL = \"https://api.privatbank.ua/p24api/exchange_rates?json&date=\";\r\n\r\nconst ACTION_TYPES = {\r\n  LOAD_DATA_REQUEST: 'LOAD_DATA_REQUEST',\r\n  LOAD_DATA_FAILURE: 'LOAD_DATA_FAILURE',\r\n  LOAD_DATA_SUCCESS: 'LOAD_DATA_SUCCESS',\r\n  LOAD_ARCHIVE_DATA_SUCCESS: 'LOAD_ARCHIVE_DATA_SUCCESS',\r\n  CONVERT_MONEY: 'CONVERT_MONEY',\r\n  GET_INPUT_VALUE: 'GET_INPUT_VALUE',\r\n  GET_INPUT_DATE: 'GET_INPUT_DATE',\r\n};\r\n\r\nexport const loadDataSuccess = (data) => ({\r\n  type: ACTION_TYPES.LOAD_DATA_SUCCESS,\r\n  data,\r\n});\r\n\r\nexport const loadArchiveDataSuccess = (data) => ({\r\n  type: ACTION_TYPES.LOAD_ARCHIVE_DATA_SUCCESS,\r\n  data,\r\n});\r\n\r\nexport const loadDataFailure = err => ({\r\n  type: ACTION_TYPES.LOAD_DATA_FAILURE,\r\n});\r\n\r\nexport const convertMoney = () => ({\r\n  type: ACTION_TYPES.CONVERT_MONEY,\r\n});\r\n\r\nexport const getInputValue = ({target}) => ({\r\n  type: ACTION_TYPES.GET_INPUT_VALUE,\r\n  target,\r\n});\r\n\r\nexport const getInputDate = (date) => ({\r\n  type: ACTION_TYPES.GET_INPUT_DATE,\r\n  date,\r\n});\r\n\r\n\r\nexport const getDataFromApi = () => (dispatch) => {\r\n  //dispatch(loading());\r\n  getData(EXCHANGE_RATE_URL)\r\n    .then(data => {\r\n    //dispatch(loading());\r\n    dispatch(loadDataSuccess(data));\r\n    //dispatch(loaded());\r\n  })\r\n};\r\n\r\nexport const getArchiveDataFromApi = (date) => (dispatch) => {\r\n  //dispatch(loading());\r\n  getData(BASE_EXCHANGE_RATES_ARCHIVE_URL +`${date}`)\r\n    .then(data => {\r\n      console.log(date);\r\n      //dispatch(loading());\r\n      dispatch(loadArchiveDataSuccess(data));\r\n      //dispatch(loaded());\r\n    })\r\n};\r\n\r\nconst initialState = {\r\n  baseExchangeRate: [],\r\n  exchangeRate: [],\r\n  isLoading: false,\r\n  isLoaded: false,\r\n  hasError: false,\r\n  inputValue: null,\r\n  convertValue: null,\r\n  date: new Date(),\r\n};\r\n\r\nfunction reducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case ACTION_TYPES.LOAD_DATA_REQUEST: {\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      }\r\n    }\r\n    case ACTION_TYPES.LOAD_DATA_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isLoaded: true,\r\n        baseExchangeRate: action.data,\r\n        exchangeRate: action.data,\r\n      }\r\n    }\r\n    case ACTION_TYPES.LOAD_ARCHIVE_DATA_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isLoaded: true,\r\n        exchangeRate: action.data.exchangeRate,\r\n      }\r\n    }\r\n    case ACTION_TYPES.LOAD_DATA_FAILURE: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        hasError: true,\r\n      }\r\n    }\r\n    case ACTION_TYPES.GET_INPUT_VALUE: {\r\n      return {\r\n        ...state,\r\n        inputValue: action.target.value,\r\n      }\r\n    }\r\n    case ACTION_TYPES.CONVERT_MONEY: {\r\n      return {\r\n        ...state,\r\n        convertValue: Number(state.inputValue) * Number(state.exchangeRate.find(item => item.currency === 'USD').purchaseRateNB),\r\n      }\r\n    }\r\n    case ACTION_TYPES.GET_INPUT_DATE: {\r\n      return {\r\n        ...state,\r\n        date: action.date,\r\n      }\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(reducer,\r\n  composeEnhancers(\r\n    applyMiddleware(thunk)\r\n  )\r\n);\r\n","import { connect } from 'react-redux';\r\nimport { ExchangeRatePage } from './ExchangeRatePage';\r\nimport { getInputDate, getArchiveDataFromApi } from '../../store';\r\n\r\nconst mapDispatch2Props = dispatch => ({\r\n  getArchiveDataFromApi: (value) => dispatch(getArchiveDataFromApi(value)),\r\n  getInputDate: (value) => dispatch(getInputDate(value)),\r\n});\r\n\r\nfunction mapState2Props(state) {\r\n  return {\r\n    baseExchangeRate: state.baseExchangeRate,\r\n    exchangeRate: state.exchangeRate,\r\n    date: state.date,\r\n  };\r\n}\r\n\r\nconst Enhanced = connect(\r\n  mapState2Props,\r\n  mapDispatch2Props,\r\n)(ExchangeRatePage);\r\n\r\nexport {\r\n  Enhanced as ExchangeRatePage,\r\n};\r\n","import React from 'react';\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nfunction getDate(date) {\r\n  let dd = date.getDate();\r\n  let mm = date.getMonth() + 1;\r\n  const yyyy = date.getFullYear();\r\n\r\n  if (dd < 10) {\r\n    dd = '0' + dd;\r\n  }\r\n  if (mm < 10) {\r\n    mm = '0' + mm;\r\n  }\r\n  return (dd + '.' + mm + '.' + yyyy);\r\n}\r\n\r\nexport const ExchangeRatePage = ({ baseExchangeRate, date, getInputDate, exchangeRate, getArchiveDataFromApi }) => {\r\n  return (\r\n    <>\r\n    <table className=\"table table-striped\">\r\n      <thead>\r\n      <tr>\r\n        <th scope=\"col\">Currency code</th>\r\n        <th scope=\"col\">Buying rate</th>\r\n        <th scope=\"col\">Sales rate</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      {baseExchangeRate.map(item => (\r\n        <tr key={item.ccy}>\r\n          <th scope=\"row\">{item.ccy}</th>\r\n          <td>{item.buy}</td>\r\n          <td>{item.sale}</td>\r\n        </tr>\r\n      ))}\r\n\r\n      </tbody>\r\n    </table>\r\n      <div>\r\n        <DatePicker\r\n          dateFormat=\"dd.MM.yyyy\"\r\n          selected={date}\r\n          onChange={(date) => getInputDate(date)}\r\n          onSelect={(date) => getArchiveDataFromApi(getDate(date))}\r\n          minDate={new Date(\"2015/01/01\")}\r\n          maxDate={new Date()}\r\n          showYearDropdown\r\n          dateFormatCalendar=\"MMMM\"\r\n          yearDropdownItemNumber={5}\r\n          scrollableYearDropdown\r\n        />\r\n        {exchangeRate.length !== 0 && (\r\n          <div>\r\n            <table className=\"table table-striped\">\r\n              <thead>\r\n              <tr>\r\n                <th scope=\"col\">Currency code</th>\r\n                <th scope=\"col\">Buying rate</th>\r\n                <th scope=\"col\">Sales rate</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              {exchangeRate.map(item =>\r\n                item.currency && (\r\n                  <tr key={item.currency}>\r\n                  <th scope=\"row\">{item.currency}</th>\r\n                  <td>{item.purchaseRateNB}</td>\r\n                  <td>{item.saleRateNB}</td>\r\n                </tr>\r\n              ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n      </div>\r\n      </>\r\n  )\r\n};\r\n","import { connect } from 'react-redux';\r\nimport { ConvertPage } from './ConvertPage';\r\nimport { getInputValue, convertMoney } from '../../store';\r\n\r\nconst mapDispatch2Props = dispatch => ({\r\n  getInputValue: (event) => dispatch(getInputValue(event)),\r\n  convertMoney: () => dispatch(convertMoney()),\r\n});\r\n\r\nfunction mapState2Props(state) {\r\n  return {\r\n    exchangeRate: state.exchangeRate,\r\n    convertValue: state.convertValue,\r\n    inputValue: state.inputValue,\r\n  };\r\n}\r\n\r\nconst Enhanced = connect(\r\n  mapState2Props,\r\n  mapDispatch2Props,\r\n)(ConvertPage);\r\n\r\nexport {\r\n  Enhanced as ConvertPage,\r\n};\r\n","import React from 'react';\r\n\r\nexport const ConvertPage = ({getInputValue, convertValue, convertMoney}) => {\r\n  return (\r\n    <>\r\n      USD:<input type=\"text\" placeholder=\"Input your value\" onChange={getInputValue} />\r\n      UAN:<input type=\"text\" disabled placeholder=\"Converted value\" value={convertValue || ''}/>\r\n      <button onClick={convertMoney}>Convert</button>\r\n    </>\r\n  )\r\n};\r\n","import React from 'react';\r\nimport { Switch, Route, NavLink } from 'react-router-dom';\r\nimport { ExchangeRatePage } from '../ExchangeRatePage';\r\nimport { ConvertPage } from '../ConvertPage';\r\nimport \"./App.scss\";\r\n\r\nexport class App extends React.Component {\r\n  componentDidMount() {\r\n    this.props.getDataFromApi();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main\">\r\n        <nav>\r\n          <ul className=\"nav justify-content-center\">\r\n            <li className=\"nav-item\">\r\n              <NavLink to=\"/home\" className=\"badge badge-warning\">\r\n                Home page\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/convertMoney\" className=\"badge badge-warning\">\r\n                Convert money\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n          <Switch>\r\n            <Route path=\"/home\" exact component={ExchangeRatePage} />\r\n            <Route path=\"/convertMoney\" component={ConvertPage}/>}\r\n            />\r\n          </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { connect } from 'react-redux';\r\nimport { App } from './App';\r\nimport { getDataFromApi } from '../../store';\r\n\r\nconst mapDispatch2Props = dispatch => ({\r\n  getDataFromApi: () => dispatch(getDataFromApi()),\r\n});\r\n\r\nfunction mapState2Props(state) {\r\n  return {\r\n    exchangeRate: state.exchangeRate,\r\n  };\r\n}\r\n\r\nconst Enhanced = connect(\r\n  mapState2Props,\r\n  mapDispatch2Props,\r\n)(App);\r\n\r\nexport {\r\n  Enhanced as App,\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store';\r\nimport { App } from './components/App';\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n  <HashRouter>\r\n    <App />\r\n  </HashRouter>\r\n  </Provider>,\r\ndocument.getElementById('root')\r\n);\r\n"],"sourceRoot":""}